package dukpt

import (
	"fmt"
	"github.com/jtrooney91/dukpt/des"
	"testing"
)

func TestDerivationOfInitialKey(t *testing.T) {
	var ltestBdk = []byte{0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef, 0xfe, 0xdc, 0xba, 0x98, 0x76, 0x54, 0x32, 0x10}
	var ltestKsn = []byte{0xff, 0xff, 0xff, 0x02, 0x00, 0x11, 0x2d, 0xe0, 0x00, 0x2f}
	// var ltestPek = []byte{0x4d, 0x72, 0x0d, 0x06, 0x2b, 0x48, 0x8d, 0x56, 0x88, 0x50, 0x17, 0xc9, 0xb7, 0xcb, 0x09, 0x68}
	var ltestCiphertext = []byte{0xb8, 0x8d, 0x22, 0xdb, 0x5e, 0xe0, 0x1f, 0x7b, 0x2b, 0x7d, 0x88, 0xb0, 0xf8, 0xce, 0x4a, 0x28}

	ik, err := des.DerivationOfInitialKey(ltestBdk, ltestKsn)
	if err != nil {
		panic(err)
	}
	key, err := des.DeriveCurrentTransactionKey(ik, ltestKsn)
	if err != nil {
		panic(err)
	}
	res, err := des.DecryptData(key, ltestCiphertext, nil, "")
	if err != nil {
		panic(err)
	}
	fmt.Println(res)

}
